name: Build PHP
on:
  push:
  pull_request:
  repository_dispatch:
  schedule:
    - cron: '0 0 * * *'
jobs:
  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Get matrix
        id: set-matrix
        env:
          COMMIT: ${{ github.event.head_commit.message }}
          OS_VERSIONS: "ubuntu:xenial ubuntu:bionic ubuntu:focal ubuntu:hirsute debian:stretch debian:buster debian:bullseye"
          PHP_VERSIONS: "8.0 8.1"
        run: bash scripts/get-matrix.sh
  build:
    needs: get-matrix
    if: "!contains(github.event.head_commit.message, 'skip-build')"
    runs-on: ${{ matrix.operating-system }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install required packages
        run: bash scripts/install-requirements.sh
      - name: Build and package
        run: bash scripts/build.sh
        env:
          GITHUB_USER: ${{ github.repository_owner }}
          GITHUB_MESSAGE: ${{ github.event.head_commit.message }}
          GITHUB_NAME: 'Shivam Mathur'
          GITHUB_EMAIL: ${{ secrets.email }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PHP_VERSION: ${{ matrix.php-version }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: php_${{ matrix.php-version }}+${{ matrix.dist }}
          path: |
            /usr/local/php/*.xz
            /usr/local/php/*.zst
      - name: Check php-cli version
        run: |
          php -v
          php -r "if(strpos(phpversion(), '${{ matrix.php-version }}') === false) {throw new Exception('Wrong PHP version Installed');}"
      - name: Check php-cgi version
        run: php-cgi -v
      - name: Check php-fpm version
        run: php-fpm -v
      - name: Check phpdbg version
        run: phpdbg -V
      - name: Check pecl version
        run: pecl -V
      - name: Check php-config version
        run: php-config --version
      - name: Check phpize version
        run: phpize -v
      - name: Check php extensions
        run: |
          php -m
          echo "extension=pcov.so" | sudo tee /usr/local/php/${{ matrix.php-version }}/etc/conf.d/20-pcov.ini
          for extension in amqp apcu igbinary imagick memcache memcached msgpack pcov redis xdebug sqlsrv pdo_sqlsrv; do
            php -r "if(! extension_loaded(\"$extension\")) {throw new Exception(\"$extension not found\");}"
          done
  local-test:
    needs: [build, get-matrix]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip-local-test')"
    container: ${{ matrix.container }}
    strategy:
      matrix: ${{fromJson(needs.get-matrix.outputs.matrix)}}
    steps:
      - name: Install sudo and curl
        run: apt-get update && apt-get install curl sudo -y
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: /tmp
      - name: Install PHP
        run: |
          mv /tmp/*/*.zst /tmp && ls /tmp
          sed -i '/download/d' scripts/install.sh
          bash scripts/install.sh ${{ matrix.php-version }}
      - name: Test
        run: |
          php -v
          php -r "if(strpos(phpversion(), '${{ matrix.php-version }}') === false) {throw new Exception('Wrong PHP version Installed');}"
          php -m
      - name: Check SAPI
        run: |
          sudo mkdir -p /var/www/html
          sudo rm -rf /var/www/html/index.html
          echo "<?php echo current(explode('-', php_sapi_name())).':'.strtolower(current(explode('/', \$_SERVER['SERVER_SOFTWARE']))).\"\n\";" | sudo tee /var/www/html/index.php >/dev/null
          for sapi in apache2handler:apache fpm:apache cgi:apache fpm:nginx; do
            echo "::group::Test $sapi"
            switch_sapi $sapi >/dev/null 2>&1
            curl -s http://localhost
            [ "$(curl -s http://localhost)" != "$sapi" ] && exit 1
            echo "::endgroup::"
          done
  github-test:
    needs: [build]
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip-github-test')"
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]
        php: ['8.0', '8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: /tmp
      - name: Install PHP
        run: |
          mv /tmp/*/*.zst /tmp && ls /tmp
          sed -i '/download/d' scripts/install.sh
          bash scripts/install.sh ${{ matrix.php-version }} github
      - name: Test
        run: |
          php -v
          php -r "if(strpos(phpversion(), '${{ matrix.php-version }}') === false) {throw new Exception('Wrong PHP version Installed');}"
          php -m
      - name: Check SAPI
        run: |
          sudo mkdir -p /var/www/html
          sudo rm -rf /var/www/html/index.html
          echo "<?php echo current(explode('-', php_sapi_name())).':'.strtolower(current(explode('/', \$_SERVER['SERVER_SOFTWARE']))).\"\n\";" | sudo tee /var/www/html/index.php >/dev/null
          for sapi in apache2handler:apache fpm:apache cgi:apache fpm:nginx; do
            echo "::group::Test $sapi"
            switch_sapi $sapi >/dev/null 2>&1
            curl -s http://localhost
            [ "$(curl -s http://localhost)" != "$sapi" ] && exit 1
            echo "::endgroup::"
          done
  release:
    needs: [local-test, github-test]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip-release')"
    steps:
      - uses: actions/checkout@v2
      - run: mkdir builds
      - uses: actions/download-artifact@v2
        with:
          path: builds
      - name: Release
        run: bash scripts/release.sh
        env:
          GITHUB_MESSAGE: ${{ github.event.head_commit.message }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
